<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <assignments>
        <name>Add_Student_Assessments</name>
        <label>Add Student Assessments</label>
        <locationX>659</locationX>
        <locationY>859</locationY>
        <assignmentItems>
            <assignToReference>sOcStudentAssessmentsToCreate</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>sOvThisStudentAssessment</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Through_Assessments</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Student_Assessment</name>
        <label>Assign Student Assessment</label>
        <locationX>657</locationX>
        <locationY>734</locationY>
        <assignmentItems>
            <assignToReference>sOvThisStudentAssessment.Assessment__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>sOvAssessment.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>sOvThisStudentAssessment.Student__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>vStudentID</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>sOvThisStudentAssessment.Student_Module__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>vStudentModuleID</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>sOvThisStudentAssessment.Name</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Test</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>sOvThisStudentAssessment.RecordTypeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>vStudentAssessmentRecordTypeID</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_Student_Assessments</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Get_Assessment_Ids_of_Studebt_Assessments</name>
        <label>Get Assessment Ids of Studebt Assessments</label>
        <locationX>648</locationX>
        <locationY>480</locationY>
        <assignmentItems>
            <assignToReference>cvAssessmentIDsOfSA</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>sOvStudentAssessment.Assessment__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Through_Student_Assessments</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_Matched_Assessments</name>
        <label>Check Matched Assessments</label>
        <locationX>655</locationX>
        <locationY>598</locationY>
        <defaultConnector>
            <targetReference>Assign_Student_Assessment</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>If This Student Assessment does not exist</defaultConnectorLabel>
        <rules>
            <name>If_This_Student_Assessment_Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>cvAssessmentIDsOfSA</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>sOvAssessment.Id</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_Through_Assessments</targetReference>
            </connector>
            <label>If This Student Assessment Exists</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_there_existing_student_assessments</name>
        <label>Is there existing student assessments</label>
        <locationX>325</locationX>
        <locationY>364</locationY>
        <defaultConnectorLabel>[Default Outcome]</defaultConnectorLabel>
        <rules>
            <name>If_student_assessments_exist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>sOcStudentAssessments</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_Through_Student_Assessments</targetReference>
            </connector>
            <label>If student assessments exist</label>
        </rules>
        <rules>
            <name>If_no_student_asessments_exist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>sOcStudentAssessments</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_Through_Assessments</targetReference>
            </connector>
            <label>If no student asessments exist</label>
        </rules>
    </decisions>
    <description>Creates Student Assessment records for Student Modules where Assessment record is present against Module. Does not create Student Assessment if one already exists.
This flow can be triggered from Programme Module Instance (&apos;Cohort&apos;) level via CreateStudentAssessmentsforCohort flow</description>
    <interviewLabel>Create Student Assessments {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Create Student Assessments for Student Module</label>
    <loops>
        <name>Loop_Through_Assessments</name>
        <label>Loop Through Assessments</label>
        <locationX>325</locationX>
        <locationY>596</locationY>
        <assignNextValueToReference>sOvAssessment</assignNextValueToReference>
        <collectionReference>sOcAssessments</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Check_Matched_Assessments</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Create_Student_Assessments</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Loop_Through_Student_Assessments</name>
        <label>Loop Through Student Assessments</label>
        <locationX>646</locationX>
        <locationY>358</locationY>
        <assignNextValueToReference>sOvStudentAssessment</assignNextValueToReference>
        <collectionReference>sOcStudentAssessments</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Get_Assessment_Ids_of_Studebt_Assessments</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Loop_Through_Assessments</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_Student_Assessments</name>
        <label>Create Student Assessments</label>
        <locationX>325</locationX>
        <locationY>855</locationY>
        <connector>
            <targetReference>Set_Trigger_to_False</targetReference>
        </connector>
        <inputReference>sOcStudentAssessmentsToCreate</inputReference>
    </recordCreates>
    <recordLookups>
        <name>Get_Assessments</name>
        <label>Get Assessments</label>
        <locationX>324</locationX>
        <locationY>32</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Student_Assessments</targetReference>
        </connector>
        <filters>
            <field>Module__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>vModuleID</elementReference>
            </value>
        </filters>
        <object>Assessment__c</object>
        <outputReference>sOcAssessments</outputReference>
        <queriedFields>Id</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>Looks up from Record Type object the record types for Student Assessments</description>
        <name>Get_Student_Assessment_Record_Type</name>
        <label>Get Student Assess RT</label>
        <locationX>322</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_there_existing_student_assessments</targetReference>
        </connector>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Resit_Allowed</stringValue>
            </value>
        </filters>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Student_Assessment__c</stringValue>
            </value>
        </filters>
        <object>RecordType</object>
        <outputAssignments>
            <assignToReference>vStudentAssessmentRecordTypeID</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_Student_Assessments</name>
        <label>Get Student Assessments</label>
        <locationX>323</locationX>
        <locationY>141</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Student_Assessment_Record_Type</targetReference>
        </connector>
        <filters>
            <field>Student_Module__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>vStudentModuleID</elementReference>
            </value>
        </filters>
        <object>Student_Assessment__c</object>
        <outputReference>sOcStudentAssessments</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Assessment__c</queriedFields>
        <queriedFields>Assessment_Record_ID__c</queriedFields>
    </recordLookups>
    <recordUpdates>
        <name>Set_Trigger_to_False</name>
        <label>Set Trigger to False</label>
        <locationX>324</locationX>
        <locationY>959</locationY>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>vStudentModuleID</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Trigger_Student_Assessment_creation__c</field>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </inputAssignments>
        <object>Student_Module__c</object>
    </recordUpdates>
    <startElementReference>Get_Assessments</startElementReference>
    <variables>
        <name>cvAssessmentIDsOfSA</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>sOcAssessments</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Assessment__c</objectType>
    </variables>
    <variables>
        <name>sOcStudentAssessments</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Student_Assessment__c</objectType>
    </variables>
    <variables>
        <name>sOcStudentAssessmentsToCreate</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Student_Assessment__c</objectType>
    </variables>
    <variables>
        <name>sOcUnwantedStudentAssessments</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Student_Assessment__c</objectType>
    </variables>
    <variables>
        <name>sOvAssessment</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Assessment__c</objectType>
    </variables>
    <variables>
        <name>sOvNewStudentAssessment</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Student_Assessment__c</objectType>
    </variables>
    <variables>
        <name>sOvStudentAssessment</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Student_Assessment__c</objectType>
    </variables>
    <variables>
        <name>sOvThisStudentAssessment</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Student_Assessment__c</objectType>
    </variables>
    <variables>
        <name>vModuleID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>vStudentAssessmentRecordTypeID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>vStudentID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>vStudentModuleID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
